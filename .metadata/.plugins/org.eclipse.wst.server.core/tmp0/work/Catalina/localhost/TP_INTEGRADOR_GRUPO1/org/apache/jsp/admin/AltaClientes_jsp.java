/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.50
 * Generated at: 2022-11-09 14:34:58 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import entidades.Genero;
import entidades.Nacionalidad;
import entidades.Provincia;
import java.util.ArrayList;

public final class AltaClientes_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("entidades.Nacionalidad");
    _jspx_imports_classes.add("entidades.Genero");
    _jspx_imports_classes.add("entidades.Provincia");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "..\\css\\Plantilla.css", out, false);
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<title>Alta Clientes</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../Encabezado.jsp", out, false);
      out.write("  \r\n");
      out.write("\r\n");
      out.write("<div class=\"parteDer\">\r\n");
      out.write("   <h3 class=\"titulo\"> Alta Clientes </h3> \r\n");
      out.write("\r\n");
      out.write("<form method=\"get\" action=\"ServletAgregarCliente\">\r\n");
      out.write("      ");
   int nroCli=0;
           if(request.getAttribute("ncli")!=null) nroCli = (int) request.getAttribute("ncli"); 
      out.write("\r\n");
      out.write("\t  <p>  Cliente nro:  ");
      out.print( nroCli++ );
      out.write(" </p>\r\n");
      out.write("      <p>  Nombre:  <input type=\"text\" name=\"nombre\" placeholder=\"Ingrese un nombre\"\r\n");
      out.write("           maxlength=\"30\" required pattern=\"[A-Za-zñÑ]+\" title=\"Ingrese solo letras\" />\r\n");
      out.write("           Apellido: <input type=\"text\" name=\"apellido\" placeholder=\"Ingrese un apellido\"\r\n");
      out.write("           maxlength=\"30\" required pattern=\"[A-Za-zñÑ]+\" title=\"Ingrese solo letras\" />\r\n");
      out.write("      <p>  Dni: <input type=\"number\" name=\"dni\" placeholder=\"Ingrese un DNI\"\r\n");
      out.write("           required pattern = \"[0-9]{8}\" title=\"Ingrese un DNI valido\"/>\r\n");
      out.write("           Cuil:  <input type=\"number\" name=\"cuil\" placeholder=\"Ingrese un CUIL\"\r\n");
      out.write("           required pattern = \"[0-9]{11}\" title=\"Ingrese un CUIL valido\"/>\r\n");
      out.write("           \r\n");
      out.write("\t  <p>  Género: \r\n");
      out.write("\t  \t\t<select required name=\"genero\" title=\"Seleccione un genero\">\r\n");
      out.write("\t  \t\t");
 ArrayList <Genero> gList = null;
	           if(request.getAttribute("generos")!=null) gList=(ArrayList<Genero>)request.getAttribute("generos");
	           if(gList!=null)
	           for(Genero g : gList){ 
      out.write("\r\n");
      out.write("\t\t\t\t<option value=\"");
      out.print(g.getCod_genero());
      out.write('"');
      out.write('>');
      out.print(g.getDescripcion());
      out.write("</option>\r\n");
      out.write("\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t</select> \r\n");
      out.write("\t       Nacionalidad: \r\n");
      out.write("\t  \t\t<select required name=\"nacionalidad\" title=\"Seleccione una nacionalidad\">\r\n");
      out.write("\t  \t\t");
 ArrayList <Nacionalidad> nList = null;
	           if(request.getAttribute("nacionalidades")!=null) nList=(ArrayList<Nacionalidad>)request.getAttribute("nacionalidades");
	           if(nList!=null)
	           for(Nacionalidad n : nList){ 
      out.write("\r\n");
      out.write("\t\t\t\t<option value=\"");
      out.print(n.getCod_nacionalidad());
      out.write('"');
      out.write('>');
      out.print(n.getDescripcion());
      out.write("</option>\r\n");
      out.write("\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t</select> \r\n");
      out.write("           \r\n");
      out.write("\t  <p>  Fecha de Nacimiento: <input type=\"text\" name=\"fechaNacimiento\" placeholder=\"dd/mm/aaaa\" required pattern=\"\\d{1,2}/\\d{1,2}/\\d{4}\" title=\"La fecha no es v&aacute;lida\"></input>\r\n");
      out.write("\r\n");
      out.write("      <p>  Dirección:  <input type=\"text\" name=\"direccion\" placeholder=\"Ingrese una dirección\"\r\n");
      out.write("           maxlength=\"50\" required  />\r\n");
      out.write("\r\n");
      out.write("\t  <p>  Localidad: \r\n");
      out.write("\t  \t\t<select required name=\"localidad\" title=\"Seleccione una localidad\">\r\n");
      out.write("\t\t\t\t<option value=\"01\">CABA</option>\r\n");
      out.write("\t\t\t\t<option value=\"02\">Buenos Aires</option>\r\n");
      out.write("\t\t\t\t<option value=\"03\">Merlo</option>\r\n");
      out.write("\t\t\t\t<option value=\"04\">Bariloche</option>\r\n");
      out.write("\t\t\t</select> \r\n");
      out.write("\r\n");
      out.write("\t       Provincia: \r\n");
      out.write("\t  \t\t<select required name=\"provincia\" title=\"Seleccione una provincia\">\r\n");
      out.write("\t  \t\t");
 ArrayList <Provincia> pList = null;
	           if(request.getAttribute("provincias")!=null) pList=(ArrayList<Provincia>)request.getAttribute("provincias");
	           if(nList!=null)
	           for(Provincia n : pList){ 
      out.write("\r\n");
      out.write("\t\t\t\t<option value=\"");
      out.print(n.getCod_provincia());
      out.write('"');
      out.write('>');
      out.print(n.getDescripcion());
      out.write("</option>\r\n");
      out.write("\t\t\t\t");
}
      out.write("\r\n");
      out.write("\t\t\t</select> \r\n");
      out.write("           \r\n");
      out.write("      <p>  Email: <input type=\"email\" required name=\"email\" placeholder=\"Ingrese un EMAIL\" title=\"Ingrese un EMAIL valido\"></input></p>\r\n");
      out.write("      \r\n");
      out.write("           Teléfono: <input type=\"tel\" required name=\"telefono\" placeholder=\"Ingrese un numero telefonico\" title=\"Ingrese un numero telefonico valido\"></input></p>\r\n");
      out.write("\r\n");
      out.write("      <p>  Usuario:  <input type=\"text\" required name=\"nombre\" placeholder=\"Usuario\"\r\n");
      out.write("           maxlength=\"30\" />\r\n");
      out.write("\r\n");
      out.write("\t  <p>  Contraseña: <input type=\"password\" required name=\"contraseña\" placeholder=\"Contraseña\"></input></p>\r\n");
      out.write("\t  <p>  Confirmar contraseña: <input type=\"password\" required name=\"contraseñaRe\" placeholder=\"Confirmar contraseña\"></input></p>\r\n");
      out.write("      <p>  Reset: <input type=\"reset\"></input></p>\r\n");
      out.write("\t  <p>  <input type=\"submit\" name=\"btnAgregar\" value=\"Agregar Cliente\"></input></p>\r\n");
      out.write("</form>\r\n");
      out.write("   \r\n");
      out.write("\t");
  if(request.getAttribute("exito")!=null) {
      out.write(" Cliente agregado con éxito ");
}
      out.write('\r');
      out.write('\n');
      out.write('	');
  if(request.getAttribute("error")!=null) {
      out.write(" No se pudo agregar el cliente. Cliente u Usuario ya existente ");
}
      out.write('\r');
      out.write('\n');
      out.write('	');
  if(request.getAttribute("errorContraseña")!=null) {
      out.write(" Error. Las contraseñas no coinciden ");
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
